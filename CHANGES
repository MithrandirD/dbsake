dbsake changelog
================

Version 1.0.6
-------------
:released: Not yet

[dbsake]
- Fixed option parsing bug with boolean options would incorrectly consume
  a command line argument.  This affects commands such as frm-to-schema
  where "frm-to-schema --raw-types foo.frm bar.frm" would result in
  only bar.frm being parsed. (issue #8)

[dbsake/split-mysqldump]
- indexes defined with an algorithm (i.e. USING BTREE) are now handled by
  split-mysqldump's index deferring logic.  Previously these indexes were
  left alone and never deferred due to a restrictive regular expression
  not matching the "USING <algorithm>" clause.
  (issue #10)
- split-mysqldump now aborts early if it detects an invalid mysqldump header.
  Previously this command had pathological behavior of queuing up input
  lines until it found the end of a header section and consuming possibly
  large amounts of memory.  This could occur in simple cases where a
  compressed .sql file was input. (issue #17)


[dbsake/frm-to-schema]
- default values are now handled correctly for blob types. Previously
  certain .frm files did not set the NO_DEFAULT fieldflag for text/blob
  columns which might cause the column to incorrectly consume default
  values and would sometimes result in later columns getting a NULL
  default.
  (issue #9)
- integer defaults are now quoted.  Previously these were bare numbers and
  there was a bug where a default of '0' was interpreted the same as having
  no default. (issue #11)
- .frm files created by MySQL 5.0 should now be handled correctly. Previously
  decoding such files would result in an uncaught exception (issue #14)

[dbsake/mysql-sandbox]
- innodb-data-file-path is now set based on existing ibdata* files when
  --data-source is used. This resolves issues when using multiple shared
  tablespaces from a backup file, or when MySQL 5.6's higher default for
  innodb-data-file-path causes innodb initialize to fail when reading
  particularly small ibdata files.
  (issue #12)
- non-executable mysqld binaries are now reported more clearly. This can
  occur if i686 is deployed on a x86_64 platform without 32-bit support
  for instance. Previously this case resulted in an uncaught exception.
  (issue #13)
- relative --sandbox-directory paths are now handled correctly. Previously
  these would be passed to mysql directly and result in incorrect paths
  as mysql reinterprets the relative paths against various internal base
  directories.
  (issue #15)
- sandbox.sh {start|stop} actions now show progress more visibly. Similar to
  the mysql.server initscript, a "." is now output once per second until the
  action finishes (either with success or failure).
  (issue #18)


Version 1.0.5
-------------
:released: Friday, January 31st 2014

[dbsake/mysql-sandbox]
- added 'upgrade' action to sandbox.sh script
  Resolves issue #1
- --mysql-distribution=system (the default) no longer copies bin/mysql, or
  bin/mysqld_safe to the sandbox directory and instead assumes they are
  in the path. only mysqld continues to be copied to workaround
  apparmor preventing access to non-standard paths otherwise.
- mysql tarball distributions now have more elements filtered with the purpose
  of conserving disk space.  Previously the ./mysql-test test suite, ./include
  development files and ./sql-bench benchmarking tools were suppressed when
  unpacking a tarball. Now ./bin/*_embedded and the ./mysqld-debug binary is
  also excluded.
- The --data-source option now supports specifying a directory in order to
  use an existing MySQL datadir for the sandbox.  This will fail if any of
  the ibdata files are in use (i.e. locked by mysqld).  Otherwise this replaces
  the ./data/ directroy with a symlink to the requested datadir.
- when bootstrapping a sandbox with an existing mysql.user table, provided by
  the --data-source option, the plugin value for the new user is set to
  'mysql_native_password' by default.  This resolves an issue with upgrading
  older data to MySQL 5.7, which now requires an authentication plugin or
  the user is disabled.
- when attempting to download a version > 5.5, dbsake will now
  check for libaio and fail early if it is not found.  This behavior
  can be disabled by using the new --skip-libcheck option.
- a bug has been fixed where running mysqld --version to discover the
  server version was suppressing stderr, so if this failed (perhaps due to
  a missing library like libaio), it was difficult to understand what went
  wrong.
- By default, dbsake will perform gpg validation against downloaded MySQL
  tarball distributions using the detached .asc signature provided by
  mysql.com.  This behavior can be disabled by specifying --skip-gpgcheck
- The ./sandbox.sh now supports a 'metadata' action for dumping information
  about the deployed sandbox.
- The ./sandbox.sh now supports a 'version' action for emitting the version
  string the sandbox was created with.  This is similar to running:
  mysql -e "SELECT CONCAT(@@version,' ', @@version_comment)"
- ./sandbox.sh restart now accepts additional command line options to pass
  to the underlying mysqld_safe script, similarly to start.  Previously
  only ./sandbox.sh start [options] passed on additional user specified
  options.

Version 1.0.4
-------------
:released: Friday, January 24th 2014

[dbsake]
- dbsake no longer depends on argparse and argparse has been removed from the
  source tree
- dbsake now traps SIGINT for a cleaner exit on interrupt
- dbsake now has a simpler logging format
- debug logging will no longer emit verbose command (sarge) output
- dbsake --log-level option was removed in favor of simpler --quiet
  and --debug options;  --quiet attempts to suppress all logging and
  --debug will enable debug level logging

[dbsake/mysql-sandbox]
- the --mysql-source option has been renamed to --mysql-distribution; the
  short option, -m, is unchanged
- add --data-source option to create a sandbox preloaded with a binary backup;
  this assumes that a tarball is relative to the mysql datadir such as
  those created by percona-xtrabackup
- with --data-source, mysql-sandbox supports applying logs on unprepared
  xtrabackup data, if innobackupex is available
- add --table/-t and --exclude-table/-T options to work with --data-source
  to supports inclusion/exclusion filters against the tarball; See the
  documentation for further details
- mysql-sandbox will now cache mysql binary tarball distributions in
  the location specified by the DBSAKE_CACHE environment variable, or
  ~/.dbsake/cache (if unset). This behavior is controlled by the --cache-policy
  option.  See the documentation for further details
- mysql-sandbox will use a simple progress bar when unpacking both
  --mysql-distribution and --data-source tarballs; This is only displayed
  when stderr is connected to a tty.
- mysql-sandbox now emits timing for each major step in the sandbox setup
  process
- sandbox.sh now supports both 'use' and 'mysql' as an alias for the 'shell'
  action introduced in v1.0.3 - namely starting a mysql commandline client
  against the sandbox
- sandbox.sh now supports a mysqldump action that will run mysqldump
  against the sandbox.  This is an alias for:
  mysqldump --defaults-file=${sandbox_directory}/my.sandbox.cnf [options]
- sandbox.sh start now supports passing options directly to mysqld_safe
  similar to the mysql community init script.
- sandbox.sh now supports an 'install-service' action that attempts to
  copy itself into /etc/init.d and add itself as a local system service
- bootstrapping is now more careful about removing users in light of
  the --data-source option; only anonymous users and db privileges on
  the test/test_% databases are removed.

Version 1.0.3
-------------
:released: Thursday, January 16th 2014

[dbsake]
- added third-party "sarge" package - a pure-python subprocess wrapper
- added third-party "tempita" package - a pure-python template engine
- most commands now lazy load their submodules to improve the startup
  time of dbsake. dbsake also only loads top-level modules when
  discovering commands

[dbsake/frm-to-schema]
- add support for old MYSQL_TYPE_VAR_STRING type to support very old VARCHAR
  types
- some internal code cleanup was done to make parsing binary frms and
  plaintext VIEW frms more consistent.

[dbsake/mysql-sandbox]
- Added new dbsake command to construct standalone MySQL instances
  See docs/subcommands.rst for details.

[rpm]
- add support for running contrib/dbsake.spec under rhel5

Version 1.0.2
-------------
:released: Tueday, January 7th 2014

[dbsake/frm-to-schema]
- Parse MySQL views from .frm
- Add --replace option to support CREATE OR REPLACE VIEW syntax
- Format indexes with a prefix length
- Add --raw-types option to output MYSQL_TYPE information
- Do not output MYSQL_TYPE information by default for binary .frms
- Add additional SQL comment for tables similar to mysqldump
  "-- Table structure for table `<name>`"

Version 1.0.1
-------------
:released: Monday, January 6th 2014

[dbsake]
- Fix bug with --log-level option that did not recognize log level names
  correctly
- Add --version/-V option to output dbsake version

[dbsake/fincore]
- Handles zero-byte files
- Fix bug in release mmap resources
- Skip paths that are not regular files

[dbsake/uncache]
- Skip paths that are not regular files

[documentation]
- Add initial Sphinx documentation

[rpm]
- Add missing Requires/BuildRequires: python-setuptools to
  contrib/dbsake.spec

Version 1.0.0
-------------
:released: Thursday, January 2nd 2014

[dbsake]
- First release of dbsake
